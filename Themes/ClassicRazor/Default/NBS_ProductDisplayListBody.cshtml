@inherits NBrightBuy.render.NBrightBuyRazorTokens<NBrightRazor>
@using System.Linq
@using System.Web
@using NBrightDNN
@using Nevoweb.DNN.NBrightBuy.Components;

@AddMetaData("resourcepath", "/DesktopModules/NBright/NBrightBuy/App_LocalResources/")

<!-- Product List Body -->
<div id="listwrapper" class="productlist">

    @{
        var lang = "";
    }

    <div class="addedtobasket" style="display:none;">@ResourceKey("ProductView.addedtobasket")</div>

    @foreach (NBrightInfo info in Model.List)
            {
                var product = new ProductData(info.ItemID, info.Lang);
                lang = info.Lang;

        <div class="product" style="width: @(Model.GetSetting("classicitemwidth"))px; height: @(Model.GetSetting("classicitemheight")); margin-bottom: @(Model.GetSetting("classicitembottommargin"))px">
            <!-- Product container -->

            <div class="productimg" style="width: @(Model.GetSettingInt("classicitemwidth") - 10)px; height: @(Model.GetSetting("classicitemimagecontainerheight"))">

                <div class="productimg-overlay">

                    <!-- Add to favorites buttons -->
                    @if (Model.GetSettingBool("enablefavorites"))
                    {
                        <span>
                            <!-- Add to Shopping List button -->
                            <a href="#shoppinglistpopup" class="shoppinglistadd" itemid="@(info.ItemID)" ><i class="fa fa-star-o"></i></a>
                            <a class="wishlistremove" listname="@(Model.GetSetting("itemlistname"))" itemid="@(info.ItemID)" style="display: none;">@ResourceKey("ProductView.wishlistremoveicon-lg")</a>
                        </span>
                    }


                    @if (!Model.GetSettingBool("cataloguemode"))
                    {
                        if (product.Models.Count == 1 && product.Options.Count == 0 && !product.ClientFileUpload)
                        {
                            <a href="javascript:void(0);" class="addtobasket" itemid="@(info.ItemID)">@ResourceKey("ProductView.addtobasketicon-lg")</a>
                        }
                    }

                    <a href="@EntryUrl(info, Model)">@ResourceKey("ProductView.viewicon-lg")</a>
                </div>

                @if (product.Imgs.Count > 0)
                {
                    <div class="image" style="height: @(Model.GetSetting("classicitemimagecontainerheight"))">
                        <img title="@(info.GetXmlProperty("genxml/lang/genxml/textbox/txtsummary"))" src="@ProductImage(info, Model.GetSetting("classicthumbnailwidth"), Model.GetSetting("classicthumbnailheight"))">
                    </div>
                }
                else
                {
                    <div class="noimage" style="height: @(Model.GetSetting("classicitemimagecontainerheight"))">
                        @(Model.GetSettingHtmlOf("noimageicon"))
                    </div>
                }

            </div>

            <div class="description">
                <h2><a href="@EntryUrl(info,Model)">@ProductName(info)</a></h2>

                <div class="price">

                    @if (product.Models.Count > 1)
                    {
                        <span class="from">@ResourceKey("ProductView.from")</span>
                    }

                    @if (product.IsOnSale)
                    {
                        <span class="old">@(NBrightBuyUtils.FormatToStoreCurrency(product.FromPrice()))</span>
                            <span class="sale">@(NBrightBuyUtils.FormatToStoreCurrency(product.BestPrice()))</span>
                    }
                    else
                    {
                        @(NBrightBuyUtils.FormatToStoreCurrency(product.BestPrice()))
                    }
                </div>

                @if (product.IsOnSale)
                {
                    <div class="onsaleflag">@ResourceKey("ProductView.onsaleflag")</div>
                }

                @if (!product.IsInStock)
                {
                    <div class="outofstockflag">@ResourceKey("ProductView.outofstockflag")</div>
                }
                @if (product.HasProperty("endofline"))
                {
                    <div class="outofstockflag">@(ResourceKey("ProductView.endoflineflag"))</div>
                }
                @if (product.HasProperty("promotion"))
                {
                    <div class="onsaleflag">@(ResourceKey("ProductView.promoflag"))</div>
                }

            </div>

            <!-- fields required to send required ajax data to server -->
            <span class="entryid@(info.ItemID)">
                <input id="@(info.ItemID)_productid" type="hidden" value="@(info.ItemID)">
                <input id="@(info.ItemID)_editlang" type="hidden" value="@(info.Lang)">
            </span>

        </div>
    }

</div>

