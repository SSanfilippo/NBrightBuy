@inherits NBrightBuy.render.NBrightBuyRazorTokens<NBrightDNN.NBrightRazor>
@using DotNetNuke.Entities.Users
@using NBrightCore.common

<!-- RAZORTEMPLATE NBS_AjaxProductDisplayList_head -->
<!-- This template is injected into the details page head section -->
<script type="text/javascript" src="/DesktopModules/NBright/NBrightBuy/Themes/config/js/nbbajax.js"></script>

<!-- Masonry Grid http://masonry.desandro.com -->
<script type="text/javascript" src="/DesktopModules/NBright/NBrightBuy/Themes/config/js/masonry.pkgd.min.js"></script>

<script type="text/javascript">

    $(document).ready(function() {

        var $container = $('.productlist').masonry({
            columnWidth: @(Model.GetSetting("classicitemwidth")), // List item width - Can also use CSS width of first list item
            itemSelector: '.product',
            gutter: @(Model.GetSetting("classicitemgutter")), // Set horizontal gap and include in calculations. Also used in CSS for vertical gap
            isOriginLeft: true, // Build from right to left if false
            isOriginTop: true // Build from bottom to top if false
        });

    });

    // Setup Ajax functionality
    var selPageSizeDropDown = "#pagesizedropdown" + "@Model.ModuleRef";
    var selOrderByDropDown = "#sortorderdropdown" + "@Model.ModuleRef";
    $(document).ready(function () {
        $(document).on("nbxgetcompleted", AjaxView_GetList_nbxgetCompleted); // assign a completed event for the ajax calls

        @* Initialize parameters. Fields defined in ascx. *@
        $("#userid").val("@UserController.Instance.GetCurrentUserInfo().UserID");
        $("#moduleid").val("@Model.ModuleId");
        $("#tabid").val("@Model.GetUrlParam("tabid")");
        $("#editlang").val("@Model.Lang");
        $("#uilang").val("@Model.Lang");
        $("#pagesize").val("@Model.Settings["pagesize"]");
        $("#pagenumber").val("1");

        @* Parameters are set, now get the initial data *@
        loadProductList();
    });

    function AjaxView_GetList_nbxgetCompleted(e) {
        //console.log("AjaxView_GetList_nbxgetCompleted called");
        addHandlers();

        $('.ajaxcatmenu').unbind("click");
        $(".ajaxcatmenu").click(function() {
            $('#catid').val($(this).attr("catid"))
            $('#catref').val('')
            loadProductList();
        });

        $('.processing').hide();
    }

    function addHandlers() {
        //console.log("addHandlers called");
        $(selPageSizeDropDown).change(pageSizeChanged);
        $(selOrderByDropDown).change(sortOrderChanged);

        $(".NBrightPagingDiv a.cmdPg[pagenumber!='']").click(function(){ pagerClicked(this); });
    }

    /*
<div class="NBrightPagingDiv">
    <ul>
        <a class="cmdPg" pagenumber=""></a>
        <li class="NBrightSelectPg"><a class="cmdPg" pagenumber="1">1</a></li>
        <li class="NBrightNormalPg"><a class="cmdPg" pagenumber="2">2</a></li>
        <li class="NBrightNormalPg"><a class="cmdPg" pagenumber="3">3</a></li>
        <li class="NBrightNextPg"><a class="cmdPg" pagenumber="2">&gt;</a></li>
        <a class="cmdPg" pagenumber=""></a>
    </ul>
</div>    
    */

    function pageSizeChanged() {
        console.log("pageSizeChanged called");
        $("#pagesize").val($(selPageSizeDropDown).val());
        loadProductList();
    }
    function sortOrderChanged() {
        console.log("sortOrderChanged called");
        $("#orderby").val($(selOrderByDropDown).val());
        loadProductList();
    }
    function pagerClicked(lnk) {
        console.log("pagerclicked called");
        console.log("pagenumber: " + $(lnk).attr("pagenumber"));
        $("#page").val($(lnk).attr("pagenumber"));
        loadProductList();
    }
    function propertyFilterClicked() {
        console.log("propertyFilterClicked called");

        var list = "";
        console.log("propertyFilterClicked found checked elements: " + $(".nbs-ajaxfilter input[type='checkbox']:checked").length.toString());
        $(".nbs-ajaxfilter input[type='checkbox']:checked").each(function() {
            list += $(this).val() + ",";
        });
        $("#propertyfilter").val(list);
        loadProductList();
    }
    function loadProductList() {
        $('.processing').show();
        nbxget('product_ajaxview_getlist', '#nbs_productajaxview', '#nbs_ajaxproducts');
    }

    // Detect Touch Device
    function isTouch() {
        return (('ontouchstart' in window)
            || (navigator.MaxTouchPoints > 0)
            || (navigator.msMaxTouchPoints > 0));
    }

    if (isTouch()) {
        $('.productimg').addClass("productimgtouch");
    }

</script>

<div id="nbs_productajaxview" style="display: none;">
    <!-- Parameter fields -->
    <!-- These fields will be initialized from the _head.cshtml -->
    <input id="userid" type="hidden" value="" />
    <input id="moduleid" type="hidden" value="" />
    <input id="tabid" type="hidden" value="" />
    <input id="editlang" type="hidden" value="" />
    <input id="uilang" type="hidden" value="" />
    <input id="catid" type="hidden" value="@Model.GetUrlParam("catid")" />
    <input id="catref" type="hidden" value="@Model.GetUrlParam("catref")" />

    <input id="modkey" type="hidden" value="" />
    <input id="pagemid" type="hidden" value="" />
    <input id="page" type="hidden" value="" />
    <input id="pagesize" type="hidden" value="" />
    <input id="orderby" type="hidden" value="" />
    <input id="entitytypecode" type="hidden" value="@Model.GetSetting("entitytypecode")" />     

    <input id="propertyfilter" type="hidden" value="" />

    <!-- this one will be set from the filter list -->
    <input id="propertyfiltertypeinside" type="hidden" value="" />
    <input id="propertyfiltertypeoutside" type="hidden" value="" />
</div>